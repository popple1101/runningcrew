-- ====================================
-- RunCrew Users 테이블 완전 새로 생성
-- (일반 회원가입 + OAuth 지원)
-- ====================================

-- 1단계: 기존 테이블 완전 삭제
DROP TABLE IF EXISTS public.users CASCADE;

-- 2단계: users 테이블 생성
CREATE TABLE public.users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  
  -- 인증 방식 (email=일반, kakao, naver)
  provider TEXT NOT NULL,
  provider_sub TEXT NOT NULL UNIQUE,
  
  -- 기본 정보
  nickname TEXT NOT NULL,
  email TEXT,
  photo_url TEXT,
  
  -- 일반 회원가입용 비밀번호 (해시)
  password_hash TEXT,
  
  -- 온보딩 정보
  age INTEGER,
  gender VARCHAR(10),
  lat DECIMAL(10, 8),
  lng DECIMAL(11, 8),
  accuracy DECIMAL(8, 2),
  region_verified BOOLEAN DEFAULT FALSE,
  crew_choice VARCHAR(20),
  
  -- 타임스탬프
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  last_login_at TIMESTAMPTZ
);

-- 3단계: 트리거 함수 생성 (updated_at 자동 갱신)
CREATE OR REPLACE FUNCTION public.set_updated_at()
RETURNS TRIGGER LANGUAGE plpgsql AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END$$;

-- 4단계: 트리거 생성
CREATE TRIGGER trg_users_set_updated_at
  BEFORE UPDATE ON public.users
  FOR EACH ROW EXECUTE FUNCTION public.set_updated_at();

-- 5단계: 인덱스 생성
-- 이메일 중복 방지 (대소문자 구분 없음, NULL 제외)
CREATE UNIQUE INDEX users_email_unique_not_null
  ON public.users (lower(email)) WHERE email IS NOT NULL;

-- 비밀번호 해시 인덱스 (일반 로그인 최적화)
CREATE INDEX users_password_hash_idx 
  ON public.users (password_hash) WHERE password_hash IS NOT NULL;

-- 인증 제공자 인덱스
CREATE INDEX users_provider_idx ON public.users (provider);

-- 생성일 인덱스 (최근 가입자 조회)
CREATE INDEX users_created_at_idx ON public.users (created_at DESC);

-- 위치 인덱스 (주변 크루 검색)
CREATE INDEX users_location_idx ON public.users (lat, lng);

-- 지역 인증 인덱스
CREATE INDEX users_region_verified_idx ON public.users (region_verified);

-- 크루 선택 인덱스
CREATE INDEX users_crew_choice_idx ON public.users (crew_choice);

-- 나이/성별 인덱스 (통계)
CREATE INDEX users_age_gender_idx ON public.users (age, gender);

-- 6단계: 제약조건 추가
-- 성별 제약
ALTER TABLE public.users
ADD CONSTRAINT users_gender_check
CHECK (gender IN ('female', 'male', 'other'));

-- 나이 제약
ALTER TABLE public.users
ADD CONSTRAINT users_age_check
CHECK (age > 0 AND age < 150);

-- 위도 제약
ALTER TABLE public.users
ADD CONSTRAINT users_lat_check
CHECK (lat >= -90 AND lat <= 90);

-- 경도 제약
ALTER TABLE public.users
ADD CONSTRAINT users_lng_check
CHECK (lng >= -180 AND lng <= 180);

-- 일반 회원가입 필수 필드 제약
ALTER TABLE public.users
ADD CONSTRAINT users_email_provider_check
CHECK (
  (provider = 'email' AND email IS NOT NULL AND password_hash IS NOT NULL)
  OR 
  (provider IN ('kakao', 'naver'))
);

-- 7단계: RLS 비활성화 (API가 service role key 사용)
ALTER TABLE public.users DISABLE ROW LEVEL SECURITY;

-- 8단계: 스키마 캐시 갱신
NOTIFY pgrst, 'reload schema';

-- 9단계: 테이블 구조 확인
SELECT 
  column_name, 
  data_type, 
  is_nullable,
  column_default
FROM information_schema.columns 
WHERE table_name = 'users' 
ORDER BY ordinal_position;

-- 완료 메시지
DO $$
BEGIN
  RAISE NOTICE '✅ Users 테이블이 성공적으로 생성되었습니다!';
  RAISE NOTICE '✅ 일반 회원가입 (provider=email) 지원';
  RAISE NOTICE '✅ OAuth (kakao, naver) 지원';
  RAISE NOTICE '✅ 온보딩 필드 포함';
END $$;

