# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # ✅ 프론트 프로젝트 디렉터리 자동 탐색 (. /crew /frontend /web /app /client 순서)
      - name: Detect project directory
        id: detect
        shell: bash
        run: |
          set -e
          for d in . crew frontend web app client; do
            if [ -f "$d/package.json" ]; then
              echo "dir=$d" >> "$GITHUB_OUTPUT"
              echo "Detected project dir: $d"
              exit 0
            fi
          done
          echo "No package.json found in known locations." >&2
          exit 1

      - name: Install dependencies
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        working-directory: ${{ steps.detect.outputs.dir }}
        run: npm run build
        env:
          # 🔗 배포본이 호출할 백엔드 주소
          VITE_API_BASE: https://runcrew-backend.popple1101.workers.dev/api
          VITE_AUTH_BASE: https://runcrew-backend.popple1101.workers.dev

      # SPA 라우팅용 404.html
      - name: Create 404 for SPA
        run: cp "${{ steps.detect.outputs.dir }}/dist/index.html" "${{ steps.detect.outputs.dir }}/dist/404.html"

      # Pages 아티팩트 업로드 (dist 경로도 동적으로)
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect.outputs.dir }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
